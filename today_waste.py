
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, ttk
import functions
from datetime import date

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"assets/frame1")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


def start(window,frame):
    window = window
    frame = frame

    canvas = Canvas(
        window,
        bg = "#FFFFFF",
        height = 700,
        width = 1280,
        bd = 0,
        highlightthickness = 0,
        relief = "ridge"
    )

    canvas.place(x = 0, y = 0)
    image_image_1 = PhotoImage(
        file=relative_to_assets("image_1.png"))
    image_1 = canvas.create_image(
        872.0,
        23.0,
        image=image_image_1
    )

    canvas.create_text(
        1113.0,
        11.0,
        anchor="nw",
        text=date.today(),
        fill="#000000",
        font=("Poppins Regular", 18 * -1)
    )

    canvas.create_text(
        1050.0,
        7.0,
        anchor="nw",
        text="Date:",
        fill="#000000",
        font=("Poppins SemiBold", 18 * -1)
    )

    canvas.create_rectangle(
        0.0,
        1.0,
        336.0,
        702.0,
        fill="#000000",
        outline="")

    image_image_2 = PhotoImage(
        file=relative_to_assets("image_2.png"))
    image_2 = canvas.create_image(
        157.0,
        115.0,
        image=image_image_2
    )

    #Sidebar-Dashboard
    dashboard_button_image= PhotoImage(
        file=relative_to_assets("button_1.png"))
    dashboard_button = Button(
        image=dashboard_button_image,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: functions.callDashboard(window,frame),
        # command=lambda: print("button_1 clicked"),
        relief="flat"
    )
    dashboard_button.place(
        x=0.0,
        y=230.0,
        width=336.0,
        height=60.0
    )

    #Sidebar-Today's Waste
    todaywaste_button_image = PhotoImage(
        file=relative_to_assets("button_2.png"))
    todaywaste_button = Button(
        image=todaywaste_button_image,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: functions.callTodayWaste(window,frame),
        # command=lambda: print("button_2 clicked"),
        relief="flat"
    )
    todaywaste_button.place(
        x=0.0,
        y=290.0,
        width=336.0,
        height=60.0
    )

    #Sidebar-Inventory
    inventory_button_image = PhotoImage(
        file=relative_to_assets("button_3.png"))
    inventory_button = Button(
        image=inventory_button_image,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: functions.callInventory(window,frame),
        # command=lambda: print("button_3 clicked"),
        relief="flat"
    )
    inventory_button.place(
        x=0.0,
        y=350.0,
        width=336.0,
        height=60.0
    )

    #Sidebar-Price Conversion
    priceConv_button_image = PhotoImage(
        file=relative_to_assets("button_4.png"))
    priceConv_button = Button(
        image=priceConv_button_image,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: functions.callPriceConv(window,frame),
        # command=lambda: print("button_4 clicked"),
        relief="flat"
    )
    priceConv_button.place(
        x=1.0,
        y=410.0,
        width=335.0,
        height=60.0
    )
    #----------------------------------

    canvas.create_text(
        395.0,
        64.0,
        anchor="nw",
        text="Todayâ€™s Waste",
        fill="#8AC926",
        font=("Poppins Bold", 25 * -1)
    )

    canvas.create_rectangle(
        393.0,
        110.0,
        1222.0,
        112.0,
        fill="#030302",
        outline="")

    canvas.create_rectangle(
        395.0,
        127.0,
        1222.0,
        167.0,
        fill="#000000",
        outline="")

    canvas.create_text(
        415.0,
        136.0,
        anchor="nw",
        text="Food waste record for today",
        fill="#FFFFFF",
        font=("Poppins SemiBold", 14 * -1)
    )

    canvas.create_rectangle(
        395.0,
        398.0,
        1222.0,
        433.0,
        fill="#000000",
        outline="")

    canvas.create_text(
        415.0,
        405.0,
        anchor="nw",
        text="Waste Information",
        fill="#FFFFFF",
        font=("Poppins SemiBold", 14 * -1)
    )

    canvas.create_text(
        395.0,
        476.0,
        anchor="nw",
        text="Waste:",
        fill="#030302",
        font=("Poppins SemiBold", 14 * -1)
    )

    image_image_3 = PhotoImage(
        file=relative_to_assets("image_3.png"))
    image_3 = canvas.create_image(
        675.0,
        491.0,
        image=image_image_3
    )

    #waste name
    waste_entry_image = PhotoImage(
        file=relative_to_assets("entry_1.png"))
    waste_entry_bg = canvas.create_image(
        675.5,
        490.5,
        image=waste_entry_image
    )
    waste_entry = Entry(
        bd=0,
        bg="#FFFFFF",
        fg="#000716",
        highlightthickness=0
    )
    waste_entry.place(
        x=474.0,
        y=472.0,
        width=403.0,
        height=35.0
    )

    canvas.create_text(
        395.0,
        554.0,
        anchor="nw",
        text="Qty (kg):",
        fill="#030302",
        font=("Poppins SemiBold", 14 * -1)
    )

    image_image_4 = PhotoImage(
        file=relative_to_assets("image_4.png"))
    image_4 = canvas.create_image(
        549.0,
        563.0,
        image=image_image_4
    )

    #waste name
    weight_entry_image = PhotoImage(
        file=relative_to_assets("entry_2.png"))
    weight_entry_bg = canvas.create_image(
        550.0,
        562.5,
        image=weight_entry_image
    )
    weight_entry = Entry(
        bd=0,
        bg="#FFFFFF",
        fg="#000716",
        highlightthickness=0
    )
    weight_entry.place(
        x=474.0,
        y=545.0,
        width=152.0,
        height=33.0
    ) 

    canvas.create_text(
        653.0,
        554.0,
        anchor="nw",
        text="Pieces:",
        fill="#030302",
        font=("Poppins SemiBold", 14 * -1)
    )

    image_image_5 = PhotoImage(
        file=relative_to_assets("image_5.png"))
    image_5 = canvas.create_image(
        801.0,
        563.0,
        image=image_image_5
    )

    pcs_entry_image = PhotoImage(
        file=relative_to_assets("entry_3.png"))
    pcs_entry_bg = canvas.create_image(
        800.0,
        562.5,
        image=pcs_entry_image
    )
    pcs_entry = Entry(
        bd=0,
        bg="#FFFFFF",
        fg="#000716",
        highlightthickness=0
    )
    pcs_entry.place(
        x=723.0,
        y=545.0,
        width=154.0,
        height=33.0
    )

    canvas.create_text(
        977.0,
        476.0,
        anchor="nw",
        text="Type:",
        fill="#030302",
        font=("Poppins SemiBold", 14 * -1)
    )

    # BUTTON - add record
    add_button_image = PhotoImage(
        file=relative_to_assets("button_5.png"))
    add_button = Button(
        image=add_button_image,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: functions.insert_waste_record(waste_entry.get(), weight_entry.get(),pcs_entry.get(), cbx_type.get(), window),
        # command=lambda: print("button_5 clicked"),
        relief="flat"
    )
    add_button.place(
        x=395.0,
        y=611.0,
        width=266.0,
        height=55.0
    )

    # BUTTON - save/update record
    save_button_image = PhotoImage(
        file=relative_to_assets("button_6.png"))
    save_button = Button(
        image=save_button_image,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: print("button_6 clicked"),
        relief="flat"
    )
    save_button.place(
        x=675.0,
        y=611.0,
        width=267.0,
        height=55.0
    )

    # BUTTON - remove/delete record
    remove_button_image = PhotoImage(
        file=relative_to_assets("button_7.png"))
    remove_button = Button(
        image=remove_button_image,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: print("button_7 clicked"),
        relief="flat"
    )
    remove_button.place(
        x=956.0,
        y=611.0,
        width=266.0,
        height=55.0
    )


    #########################################################################
    
    # CUSTOM CODE

    #function to get value of combo box
    def cbx_type_click(event):
        global type
        type = cbx_type.get()

    # DROPDOWN MENU
    cbx_type_options = ["Canned Goods", "Fruit", "Meat", "Vegetable"]       # change me
    cbx_type  = ttk.Combobox(values=cbx_type_options)
    cbx_type.bind("<<ComboboxSelected>>", cbx_type_click)
    cbx_type.place(
    x=1035.0,
    y=460.0,
    width=184,
    height=56,
    )
    cbx_type.config(
    font=("Inter ExtraLight", 20 * -1),
    justify="center",
    state="readonly"
    )

    style = ttk.Style()
    style.theme_use('clam')
    style.configure("TCombobox", fieldbackground= "white", background= "#DEEAEE")


    #FUNCTIONS
    functions.showTodayWasteRecord(window)


    window.resizable(False, False)
    window.mainloop()



if __name__=='__main__':
    window = Tk()
    window.geometry("1280x700")
    window.configure(bg = "#FFFFFF")
    window.title("Today's Waste")
    start(window, frame=window)
